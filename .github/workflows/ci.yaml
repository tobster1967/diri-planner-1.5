name: CI - Tests and Linting

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: test_diri_planner
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        run: uv pip install --system -r pyproject.toml

      - name: Run migrations
        env:
          POSTGRES_DB: test_diri_planner
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          DJANGO_SETTINGS_MODULE: config.settings
        run: python manage.py migrate

      - name: Run tests
        env:
          POSTGRES_DB: test_diri_planner
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          DJANGO_SETTINGS_MODULE: config.settings
        run: python manage.py test core.tests --verbosity=2

      - name: Generate coverage report
        if: always()
        env:
          POSTGRES_DB: test_diri_planner
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
        run: |
          uv pip install --system coverage
          coverage run --source='.' manage.py test core.tests
          coverage report
          coverage xml

      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install uv
          uv pip install --system ruff black isort

      - name: Run Ruff (linter)
        run: ruff check . --output-format=github || true

      - name: Check code formatting with Black
        run: black --check . || true

      - name: Check import sorting with isort
        run: isort --check-only . || true

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install uv
          uv pip install --system -r pyproject.toml
          pip install safety bandit

      - name: Run Safety check
        run: safety check || true

      - name: Run Bandit security scan
        run: bandit -r . -f json -o bandit-report.json || true

      - name: Upload Bandit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bandit-security-report
          path: bandit-report.json